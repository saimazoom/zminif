Modules list:
-------------
libgfx_c64.o:
    CODE              Offs=000000  Size=0004D5  Align=00001  Fill=0000
main.o:
    CODE              Offs=0004D5  Size=000072  Align=00001  Fill=0000
    RODATA            Offs=000000  Size=000040  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(callmain.o):
    CODE              Offs=000547  Size=000017  Align=00001  Fill=0000
    DATA              Offs=000000  Size=000004  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(condes.o):
    CODE              Offs=00055E  Size=00000C  Align=00001  Fill=0000
    DATA              Offs=000004  Size=000025  Align=00001  Fill=0000
    ONCE              Offs=000000  Size=00000C  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(crt0.o):
    STARTUP           Offs=000000  Size=000033  Align=00001  Fill=0000
    ONCE              Offs=00000C  Size=00001A  Align=00001  Fill=0000
    INIT              Offs=000000  Size=00001C  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(decsp1.o):
    CODE              Offs=00056A  Size=000009  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(exehdr.o):
    EXEHDR            Offs=000000  Size=00000C  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(kernal.o):
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(loadaddr.o):
    LOADADDR          Offs=000000  Size=000002  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(popa.o):
    CODE              Offs=000573  Size=00000C  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(pusha.o):
    CODE              Offs=00057F  Size=000016  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(pushax.o):
    CODE              Offs=000595  Size=00001A  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(status.o):
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(zerobss.o):
    CODE              Offs=0005AF  Size=000023  Align=00001  Fill=0000
D:\devel\zminif\cc65-snapshot-win32\lib/c64.lib(zeropage.o):
    ZEROPAGE          Offs=000000  Size=00001A  Align=00001  Fill=0000


Segment list:
-------------
Name                   Start     End    Size  Align
----------------------------------------------------
ZEROPAGE              000002  00001B  00001A  00001
LOADADDR              0007FF  000800  000002  00001
EXEHDR                000801  00080C  00000C  00001
STARTUP               00080D  00083F  000033  00001
CODE                  000840  000E11  0005D2  00001
RODATA                000E12  000E51  000040  00001
DATA                  000E52  000E7A  000029  00001
INIT                  000E7B  000E96  00001C  00001
ONCE                  000E97  000EBC  000026  00001


Exports list by name:
---------------------
BSOUT                     00FFD2 RLA    ST                        000090 RLZ    
_HighResMode              000D02 RLA    __BSS_RUN__               000E97 RLA    
__BSS_SIZE__              000000 REA    __CONSTRUCTOR_COUNT__     000000 REA    
__CONSTRUCTOR_TABLE__     000EBD RLA    __DESTRUCTOR_COUNT__      000000 REA    
__DESTRUCTOR_TABLE__      000E52 RLA    __EXEHDR__                000001 REA    
__HEADER_LAST__           00080D RLA    __HIMEM__                 00D000 REA    
__LOADADDR__              000001 REA    __MAIN_SIZE__             00C7F3 REA    
__MAIN_START__            00080D RLA    __ONCE_RUN__              000E97 RLA    
__STACKSIZE__             000800 REA    __STARTUP__               000001 REA    
_clearScreen              000B8F RLA    _clearVideoBitmap         000B62 RLA    
_clearVideoColorMem       000B7D RLA    _clearVideoRam            000B47 RLA    
_getKey                   000BA1 RLA    _main                     000D15 RLA    
_print_char               000BE1 RLA    _print_string             000BA9 RLA    
_setRamLayout             000CEB RLA    _splitScreen              000C73 RLA    
_waitForAnyKey            000B98 RLA    callmain                  000D87 RLA    
decsp1                    000DAA RLA    donelib                   000D9E RLA    
initlib                   000E97 RLA    popa                      000DB3 RLA    
ptr1                      00000A RLZ    ptr3                      00000E RLZ    
ptr4                      000010 RLZ    pusha                     000DC3 RLA    
pushax                    000DD9 RLA    sp                        000002 RLZ    
tmp1                      000012 RLZ    tmp2                      000013 RLZ    
tmp4                      000015 RLZ    zerobss                   000DEF RLA    



Exports list by value:
----------------------
__DESTRUCTOR_COUNT__      000000 REA    __CONSTRUCTOR_COUNT__     000000 REA    
__BSS_SIZE__              000000 REA    __STARTUP__               000001 REA    
__LOADADDR__              000001 REA    __EXEHDR__                000001 REA    
sp                        000002 RLZ    ptr1                      00000A RLZ    
ptr3                      00000E RLZ    ptr4                      000010 RLZ    
tmp1                      000012 RLZ    tmp2                      000013 RLZ    
tmp4                      000015 RLZ    ST                        000090 RLZ    
__STACKSIZE__             000800 REA    __MAIN_START__            00080D RLA    
__HEADER_LAST__           00080D RLA    _clearVideoRam            000B47 RLA    
_clearVideoBitmap         000B62 RLA    _clearVideoColorMem       000B7D RLA    
_clearScreen              000B8F RLA    _waitForAnyKey            000B98 RLA    
_getKey                   000BA1 RLA    _print_string             000BA9 RLA    
_print_char               000BE1 RLA    _splitScreen              000C73 RLA    
_setRamLayout             000CEB RLA    _HighResMode              000D02 RLA    
_main                     000D15 RLA    callmain                  000D87 RLA    
donelib                   000D9E RLA    decsp1                    000DAA RLA    
popa                      000DB3 RLA    pusha                     000DC3 RLA    
pushax                    000DD9 RLA    zerobss                   000DEF RLA    
__DESTRUCTOR_TABLE__      000E52 RLA    __ONCE_RUN__              000E97 RLA    
__BSS_RUN__               000E97 RLA    initlib                   000E97 RLA    
__CONSTRUCTOR_TABLE__     000EBD RLA    __MAIN_SIZE__             00C7F3 REA    
__HIMEM__                 00D000 REA    BSOUT                     00FFD2 RLA    



Imports list:
-------------
BSOUT (kernal.o):
    crt0.o                    c64/crt0.s(10)
ST (status.o):
    crt0.o                    c64/crt0.s(13)
_HighResMode (libgfx_c64.o):
    main.o                    ./main.s(16)
__BSS_RUN__ ([linker generated]):
    zerobss.o                 common/zerobss.s(8)
__BSS_SIZE__ ([linker generated]):
    zerobss.o                 common/zerobss.s(8)
__CONSTRUCTOR_COUNT__ ([linker generated]):
    condes.o                  runtime/condes.s(18)
__CONSTRUCTOR_TABLE__ ([linker generated]):
    condes.o                  runtime/condes.s(18)
__DESTRUCTOR_COUNT__ ([linker generated]):
    condes.o                  runtime/condes.s(19)
__DESTRUCTOR_TABLE__ ([linker generated]):
    condes.o                  runtime/condes.s(19)
__EXEHDR__ (exehdr.o):
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(6)
__HEADER_LAST__ ([linker generated]):
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(14)
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(14)
__HIMEM__ ([linker generated]):
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(15)
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(14)
__LOADADDR__ (loadaddr.o):
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(5)
__MAIN_SIZE__ ([linker generated]):
    crt0.o                    c64/crt0.s(11)
__MAIN_START__ ([linker generated]):
    crt0.o                    c64/crt0.s(11)
__ONCE_RUN__ ([linker generated]):
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(15)
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(15)
__STACKSIZE__ ([linker generated]):
    [linker generated]        D:\devel\zminif\cc65-snapshot-win32\cfg/c64.cfg(15)
__STARTUP__ (crt0.o):
    main.o                    ./main.s(13)
_clearScreen (libgfx_c64.o):
    main.o                    ./main.s(21)
_clearVideoBitmap (libgfx_c64.o):
    main.o                    ./main.s(19)
_clearVideoColorMem (libgfx_c64.o):
    main.o                    ./main.s(17)
_clearVideoRam (libgfx_c64.o):
    main.o                    ./main.s(18)
_getKey (libgfx_c64.o):
    main.o                    ./main.s(22)
_main (main.o):
    callmain.o                runtime/callmain.s(11)
_print_char (libgfx_c64.o):
    main.o                    ./main.s(24)
_print_string (libgfx_c64.o):
    main.o                    ./main.s(23)
_setRamLayout (libgfx_c64.o):
    main.o                    ./main.s(14)
_splitScreen (libgfx_c64.o):
    main.o                    ./main.s(15)
_waitForAnyKey (libgfx_c64.o):
    main.o                    ./main.s(20)
callmain (callmain.o):
    crt0.o                    c64/crt0.s(9)
decsp1 (decsp1.o):
    main.o                    ./main.s(97)
donelib (condes.o):
    crt0.o                    c64/crt0.s(8)
initlib (condes.o):
    crt0.o                    c64/crt0.s(8)
popa (popa.o):
    libgfx_c64.o              ./libgfx_c64.asm(24)
ptr1 (zeropage.o):
    zerobss.o                 common/zerobss.s(9)
    libgfx_c64.o              ./libgfx_c64.asm(26)
ptr3 (zeropage.o):
    libgfx_c64.o              ./libgfx_c64.asm(26)
ptr4 (zeropage.o):
    libgfx_c64.o              ./libgfx_c64.asm(26)
pusha (pusha.o):
    main.o                    ./main.s(97)
pushax (pushax.o):
    callmain.o                runtime/callmain.s(11)
sp (zeropage.o):
    pushax.o                  runtime/pushax.s(8)
    pusha.o                   runtime/pusha.s(8)
    popa.o                    runtime/popa.s(8)
    decsp1.o                  runtime/decsp1.s(8)
    crt0.o                    /home/travis/build/cc65/cc65/asminc/zeropage.inc(11)
    main.o                    ./main.s(10)
tmp1 (zeropage.o):
    libgfx_c64.o              ./libgfx_c64.asm(26)
tmp2 (zeropage.o):
    libgfx_c64.o              ./libgfx_c64.asm(26)
tmp4 (zeropage.o):
    libgfx_c64.o              ./libgfx_c64.asm(26)
zerobss (zerobss.o):
    crt0.o                    c64/crt0.s(9)

